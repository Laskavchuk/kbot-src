name: Release

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPOSITORY_ROOT: ${{ github.workspace }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          LATEST_TAG=${{ env.LATEST_TAG }}
          VERSION=$(echo $LATEST_TAG | awk -F. -v OFS=. '{$NF++; print}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "New version: $VERSION"

      - name: Create a new tag
        id: tag
        run: |
          VERSION=${{ steps.increment_version.outputs.VERSION }}
          git tag -a "v$VERSION" -m "Release $VERSION"
          git push origin "v$VERSION"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: APP_BUILD_INFO=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Update Helm values with new image tag
        run: |
          export VERSION=${{ steps.increment_version.outputs.VERSION }}
          yq e -i '.image.tag = strenv(VERSION)' helm/values.yaml
          cat helm/values.yaml

      - name: Create dist directory
        run: |
          mkdir -p ${REPOSITORY_ROOT}/dist/helm

      - name: Package Helm chart
        id: package
        run: |
          VERSION=${{ steps.increment_version.outputs.VERSION }}
          CHART_PATH=$(helm package helm/ --version $VERSION --app-version $VERSION -d ${REPOSITORY_ROOT}/dist/helm | cut -d: -f2 | tr -d ' ')
          echo "CHART_PATH=${CHART_PATH}" >> $GITHUB_ENV

      - name: Push Helm chart
        run: |
          helm push ${CHART_PATH} oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts
